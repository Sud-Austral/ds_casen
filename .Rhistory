# Excluimos los outliers
Q <- quantile(ab$ytotcor, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(ab$ytotcor)
eliminated <- subset(ab, ab$ytotcor > (Q[1] - 1.5*iqr) & ab$ytotcor < (Q[2]+1.5*iqr))
dataset_2015 <- readRDS(file = "casen_2015_c.rds")
ab <- dataset_2015
alfabetismo <- read_xlsx("alfabetismo_unicos.xlsx")
categorias <- read_xlsx("categorias_etnia.xlsx")
dataset_2015_a = merge( x = ab, y = alfabetismo, by = "e1", all.x = TRUE)
dataset_2015_b = merge( x = dataset_2015_a, y = categorias, by = "r3", all.x = TRUE)
ab <- dataset_2015_b
# Eliminamos del dataframe los registros que no posean valores en la columna del ingreso total:
ab <- ab[!is.na(ab$ytotcor),]
View(dataset_2015_b)
unidos_los_cuatro <- rbind(df_2006,df_2009,df_2011,df_2013)
library(RPostgreSQL)
library(devtools)
library(remotes)
library(DBI)
library(tidyverse)
library(kableExtra)
library(reldist)
library("readxl")
library("writexl")
dataset_2006 <- readRDS(file = "casen_2006_c.rds")
ab <- dataset_2006
alfabetismo <- read_xlsx("alfabetismo_unicos.xlsx")
categorias <- read_xlsx("categorias_etnia.xlsx")
names(alfabetismo)
names(categorias)
names(alfabetismo)[1] <- "E1"
names(categorias)[1] <- "T4"
dataset_2006_a = merge( x = ab, y = alfabetismo, by = "E1", all.x = TRUE)
dataset_2006_b = merge( x = dataset_2006_a, y = categorias, by = "T4", all.x = TRUE)
library(RPostgreSQL)
library(devtools)
library(remotes)
library(DBI)
library(tidyverse)
library(kableExtra)
library(reldist)
library("readxl")
library("writexl")
dataset_2006 <- readRDS(file = "casen_2006_c.rds")
ab <- dataset_2006
alfabetismo <- read_xlsx("alfabetismo_unicos.xlsx")
categorias <- read_xlsx("categorias_etnia.xlsx")
names(alfabetismo)
names(categorias)
names(alfabetismo)[1] <- "E1"
names(categorias)[1] <- "T4"
dataset_2006_a = merge( x = ab, y = alfabetismo, by = "E1", all.x = TRUE)
dataset_2006_b = merge( x = dataset_2006_a, y = categorias, by = "T4", all.x = TRUE)
library(RPostgreSQL)
library(devtools)
library(remotes)
library(DBI)
library(tidyverse)
library(kableExtra)
library(reldist)
library("readxl")
library("writexl")
dataset_2006 <- readRDS(file = "casen_2006_c.rds")
ab <- dataset_2006
alfabetismo <- read_xlsx("alfabetismo_unicos.xlsx")
categorias <- read_xlsx("categorias_etnia.xlsx")
names(alfabetismo)
names(categorias)
names(alfabetismo)[1] <- "E1"
names(categorias)[1] <- "T4"
dataset_2006_a = merge( x = ab, y = alfabetismo, by = "E1", all.x = TRUE)
dataset_2006_b = merge( x = dataset_2006_a, y = categorias, by = "T4", all.x = TRUE)
ab <- dataset_2006_b
# Eliminamos del dataframe los registros que no posean valores en la columna del ingreso total:
ab <- ab[!is.na(ab$YTOTAJ),]
# Excluimos los outliers
Q <- quantile(ab$YTOTAJ, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(ab$YTOTAJ)
eliminated <- subset(ab, ab$YTOTAJ > (Q[1] - 1.5*iqr) & ab$YTOTAJ < (Q[2]+1.5*iqr))
eliminated <- data.frame(lapply(eliminated, as.character), stringsAsFactors=FALSE)
# despleguemos los primeros 100 registros en pantalla del subset creado:
# eliminated_100 <- eliminated[c(1:100),]
# eliminated_100 %>%  kbl() %>%
# kable_material(c("striped", "hover"), font_size = 12)%>%
#    scroll_box(width = "100%", height = "500px")
# eliminated_100
b <-  as.numeric(eliminated$YTOTAJ)
a <- eliminated$COMUNA
c <- eliminated$categorias_etnicas
d <- eliminated$cat_alfa
e <- eliminated$SEXO
# Calculamos los promedios de ingreso grupales, la desviación estandar del rango y el coeficiente de Gini:
promedios_grupales <-aggregate(b, by=list(a,c,d,e), FUN = mean , na.rm=TRUE )
promedios_grupales_sd <-aggregate(b, by=list(a,c,d,e), FUN = sd , na.rm=TRUE )
promedios_grupales_gini <-aggregate(b, by=list(a,c,d,e), FUN = gini  )
# Asignamos nuevas columnas a la tabla base con medias y sd:
promedios_grupales$sd <- promedios_grupales_sd$x
promedios_grupales$gini <- promedios_grupales_gini$x
# Eliminamos los valores que no tengan desviacion standard, pues implican registros unicos.
promedios_grupales <-promedios_grupales[!(is.na(promedios_grupales$sd)),]
# promedios_grupales_100 <- promedios_grupales[c(1:100),]
# promedios_grupales_100 %>%  kbl() %>% kable_material(c("striped", "hover"), font_size = 12)%>%
#    scroll_box(width = "100%", height = "500px")
# promedios_grupales_100
#Asignamos nombres con sentido a las cabeceras:
names(promedios_grupales)[1] <- "comuna"
names(promedios_grupales)[2] <- "Etnia"
names(promedios_grupales)[3] <- "Alfabetismo"
names(promedios_grupales)[4] <- "sexo"
names(promedios_grupales)[5] <- "promedio"
names(promedios_grupales)[6] <- "sd"
names(promedios_grupales)[7] <- "gini"
promedios_grupales$año <- "2006"
codigos_comunales <- readRDS(file = "codigos_comunales_2006.rds")
names(codigos_comunales)[1] <- "código"
names(codigos_comunales)[2] <- "comuna"
df_2006 = merge( x = promedios_grupales, y = codigos_comunales, by = "comuna", all.x = TRUE)
# head(df_2006,50) %>%  kbl() %>% kable_material(c("striped", "hover"), font_size = 12)%>%
# scroll_box(width = "100%", height = "500px")
#head(df_2006,10)
df_2006
# write_xlsx(df_2006,"df_2006.xlsx")
unicos <- df_2006[,c(1,2,3,4)]
unicos
dataset_2009 <- readRDS(file = "casen_2009_c.rds")
ab <- dataset_2009
alfabetismo <- read_xlsx("alfabetismo_unicos.xlsx")
categorias <- read_xlsx("categorias_etnia.xlsx")
names(alfabetismo)
names(categorias)
names(alfabetismo)[1] <- "E1"
names(categorias)[1] <- "T5"
dataset_2009_a = merge( x = ab, y = alfabetismo, by = "E1", all.x = TRUE)
dataset_2009_b = merge( x = dataset_2009_a, y = categorias, by = "T5", all.x = TRUE)
ab <- dataset_2009_b
# Eliminamos del dataframe los registros que no posean valores en la columna del ingreso total:
ab <- ab[!is.na(ab$YTOTAJ),]
# Excluimos los outliers
Q <- quantile(ab$YTOTAJ, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(ab$YTOTAJ)
eliminated <- subset(ab, ab$YTOTAJ > (Q[1] - 1.5*iqr) & ab$YTOTAJ < (Q[2]+1.5*iqr))
eliminated <- data.frame(lapply(eliminated, as.character), stringsAsFactors=FALSE)
# despleguemos los primeros 100 registros en pantalla del subset creado:
eliminated_100 <- eliminated[c(1:100),]
# eliminated_100 %>%  kbl() %>%
# kable_material(c("striped", "hover"), font_size = 12)%>%
#    scroll_box(width = "100%", height = "500px")
b <-  as.numeric(eliminated$YTOTAJ)
a <- eliminated$COMUNA
c <- eliminated$categorias_etnicas
d <- eliminated$cat_alfa
e <- eliminated$SEXO
# Calculamos los promedios de ingreso grupales, la desviación estandar del rango y el coeficiente de Gini:
promedios_grupales <-aggregate(b, by=list(a,c,d,e), FUN = mean , na.rm=TRUE )
promedios_grupales_sd <-aggregate(b, by=list(a,c,d,e), FUN = sd , na.rm=TRUE )
promedios_grupales_gini <-aggregate(b, by=list(a,c,d,e), FUN = gini  )
# Asignamos nuevas columnas a la tabla base con medias y sd:
promedios_grupales$sd <- promedios_grupales_sd$x
promedios_grupales$gini <- promedios_grupales_gini$x
# Eliminamos los valores que no tengan desviacion standard, pues implican registros unicos.
promedios_grupales <-promedios_grupales[!(is.na(promedios_grupales$sd)),]
promedios_grupales_100 <- promedios_grupales[c(1:100),]
#
#
# promedios_grupales_100 %>%  kbl() %>% kable_material(c("striped", "hover"), font_size = 12)%>%
#    scroll_box(width = "100%", height = "500px")
#Asignamos nombres con sentido a las cabeceras:
names(promedios_grupales)[1] <- "comuna"
names(promedios_grupales)[2] <- "Etnia"
names(promedios_grupales)[3] <- "Alfabetismo"
names(promedios_grupales)[4] <- "sexo"
names(promedios_grupales)[5] <- "promedio"
names(promedios_grupales)[6] <- "sd"
names(promedios_grupales)[7] <- "gini"
promedios_grupales$año <- "2009"
codigos_comunales <- readRDS(file = "codigos_comunales_2009.rds")
names(codigos_comunales)[1] <- "código"
names(codigos_comunales)[2] <- "comuna"
df_2009 = merge( x = promedios_grupales, y = codigos_comunales, by = "comuna", all.x = TRUE)
df_2009
unicos <- df_2009[,c(1,2,3,4)]
unicos
dataset_2011 <- readRDS(file = "casen_2011_c.rds")
ab <- dataset_2011
alfabetismo <- read_xlsx("alfabetismo_unicos.xlsx")
categorias <- read_xlsx("categorias_etnia.xlsx")
names(alfabetismo)
names(categorias)
names(alfabetismo)[1] <- "e1"
names(categorias)[1] <- "r6"
dataset_2011_a = merge( x = ab, y = alfabetismo, by = "e1", all.x = TRUE)
dataset_2011_b = merge( x = dataset_2011_a, y = categorias, by = "r6", all.x = TRUE)
ab <- dataset_2011_b
# Eliminamos del dataframe los registros que no posean valores en la columna del ingreso total:
ab <- ab[!is.na(ab$ytotaj),]
# Excluimos los outliers
Q <- quantile(ab$ytotaj, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(ab$ytotaj)
eliminated <- subset(ab, ab$ytotaj > (Q[1] - 1.5*iqr) & ab$ytotaj < (Q[2]+1.5*iqr))
eliminated <- data.frame(lapply(eliminated, as.character), stringsAsFactors=FALSE)
# despleguemos los primeros 100 registros en pantalla del subset creado:
eliminated_100 <- eliminated[c(1:100),]
# eliminated_100 %>%  kbl() %>%
# kable_material(c("striped", "hover"), font_size = 12)%>%
#    scroll_box(width = "100%", height = "500px")
b <-  as.numeric(eliminated$ytotaj)
a <- eliminated$comuna
c <- eliminated$categorias_etnicas
d <- eliminated$cat_alfa
e <- eliminated$sexo
# Calculamos los promedios de ingreso grupales, la desviación estandar del rango y el coeficiente de Gini:
promedios_grupales <-aggregate(b, by=list(a,c,d,e), FUN = mean , na.rm=TRUE )
promedios_grupales_sd <-aggregate(b, by=list(a,c,d,e), FUN = sd , na.rm=TRUE )
promedios_grupales_gini <-aggregate(b, by=list(a,c,d,e), FUN = gini  )
# Asignamos nuevas columnas a la tabla base con medias y sd:
promedios_grupales$sd <- promedios_grupales_sd$x
promedios_grupales$gini <- promedios_grupales_gini$x
# Eliminamos los valores que no tengan desviacion standard, pues implican registros unicos.
promedios_grupales <-promedios_grupales[!(is.na(promedios_grupales$sd)),]
promedios_grupales_100 <- promedios_grupales[c(1:100),]
# promedios_grupales_100 %>%  kbl() %>% kable_material(c("striped", "hover"), font_size = 12)%>%
#    scroll_box(width = "100%", height = "500px")
#Asignamos nombres con sentido a las cabeceras:
names(promedios_grupales)[1] <- "comuna"
names(promedios_grupales)[2] <- "Etnia"
names(promedios_grupales)[3] <- "Alfabetismo"
names(promedios_grupales)[4] <- "sexo"
names(promedios_grupales)[5] <- "promedio"
names(promedios_grupales)[6] <- "sd"
names(promedios_grupales)[7] <- "gini"
promedios_grupales$año <- "2011"
codigos_comunales <- readRDS(file = "codigos_comunales_2011-2017.rds")
names(codigos_comunales)[1] <- "código"
names(codigos_comunales)[2] <- "comuna"
df_2011 = merge( x = promedios_grupales, y = codigos_comunales, by = "comuna", all.x = TRUE)
df_2011
unicos <- df_2011[,c(1,2,3,4)]
unicos
dataset_2013 <- readRDS(file = "casen_2013_c.rds")
ab <- dataset_2013
alfabetismo <- read_xlsx("alfabetismo_unicos.xlsx")
categorias <- read_xlsx("categorias_etnia.xlsx")
names(alfabetismo)
names(categorias)
names(alfabetismo)[1] <- "e1"
names(categorias)[1] <- "r6"
dataset_2013_a = merge( x = ab, y = alfabetismo, by = "e1", all.x = TRUE)
dataset_2013_b = merge( x = dataset_2013_a, y = categorias, by = "r6", all.x = TRUE)
ab <- dataset_2013_b
# Eliminamos del dataframe los registros que no posean valores en la columna del ingreso total:
ab <- ab[!is.na(ab$ytotcor),]
# Excluimos los outliers
Q <- quantile(ab$ytotcor, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(ab$ytotcor)
eliminated <- subset(ab, ab$ytotcor > (Q[1] - 1.5*iqr) & ab$ytotcor < (Q[2]+1.5*iqr))
eliminated <- data.frame(lapply(eliminated, as.character), stringsAsFactors=FALSE)
# despleguemos los primeros 100 registros en pantalla del subset creado:
eliminated_100 <- eliminated[c(1:100),]
# eliminated_100 %>%  kbl() %>%
# kable_material(c("striped", "hover"), font_size = 12)%>%
#    scroll_box(width = "100%", height = "500px")
b <-  as.numeric(eliminated$ytotcor)
a <- eliminated$comuna
c <- eliminated$categorias_etnicas
d <- eliminated$cat_alfa
e <- eliminated$sexo
# Calculamos los promedios de ingreso grupales, la desviación estandar del rango y el coeficiente de Gini:
promedios_grupales <-aggregate(b, by=list(a,c,d,e), FUN = mean , na.rm=TRUE )
promedios_grupales_sd <-aggregate(b, by=list(a,c,d,e), FUN = sd , na.rm=TRUE )
promedios_grupales_gini <-aggregate(b, by=list(a,c,d,e), FUN = gini  )
# Asignamos nuevas columnas a la tabla base con medias y sd:
promedios_grupales$sd <- promedios_grupales_sd$x
promedios_grupales$gini <- promedios_grupales_gini$x
# Eliminamos los valores que no tengan desviacion standard, pues implican registros unicos.
promedios_grupales <-promedios_grupales[!(is.na(promedios_grupales$sd)),]
promedios_grupales_100 <- promedios_grupales[c(1:100),]
# promedios_grupales_100 %>%  kbl() %>% kable_material(c("striped", "hover"), font_size = 12)%>%
#    scroll_box(width = "100%", height = "500px")
#Asignamos nombres con sentido a las cabeceras:
names(promedios_grupales)[1] <- "comuna"
names(promedios_grupales)[2] <- "Etnia"
names(promedios_grupales)[3] <- "Alfabetismo"
names(promedios_grupales)[4] <- "sexo"
names(promedios_grupales)[5] <- "promedio"
names(promedios_grupales)[6] <- "sd"
names(promedios_grupales)[7] <- "gini"
promedios_grupales$año <- "2013"
codigos_comunales <- readRDS(file = "codigos_comunales_2011-2017.rds")
names(codigos_comunales)[1] <- "código"
names(codigos_comunales)[2] <- "comuna"
df_2013 = merge( x = promedios_grupales, y = codigos_comunales, by = "comuna", all.x = TRUE)
df_2013
unicos <- df_2013[,c(1,2,3,4)]
unicos
unidos_los_cuatro <- rbind(df_2006,df_2009,df_2011,df_2013)
dataset_2015 <- readRDS(file = "casen_2015_c.rds")
ab <- dataset_2015
alfabetismo <- read_xlsx("alfabetismo_unicos.xlsx")
categorias <- read_xlsx("categorias_etnia.xlsx")
names(alfabetismo)
names(categorias)
names(alfabetismo)[1] <- "e1"
names(categorias)[1] <- "r6"
dataset_2015_a = merge( x = ab, y = alfabetismo, by = "e1", all.x = TRUE)
dataset_2015_b = merge( x = dataset_2015_a, y = categorias, by = "r3", all.x = TRUE)
saveRDS(unidos_los_cuatro,"unidos_los_cuatro.rds")
dataset_2015 <- readRDS(file = "casen_2015_c.rds")
ab <- dataset_2015
ab <- dataset_2015
alfabetismo <- read_xlsx("alfabetismo_unicos.xlsx")
categorias <- read_xlsx("categorias_etnia.xlsx")
names(alfabetismo)
names(categorias)
dataset_2015_a = merge( x = ab, y = alfabetismo, by = "e1", all.x = TRUE)
dataset_2015_b = merge( x = dataset_2015_a, y = categorias, by = "r3", all.x = TRUE)
ab <- dataset_2015_b
# Eliminamos del dataframe los registros que no posean valores en la columna del ingreso total:
ab <- ab[!is.na(ab$ytotcor),]
# Excluimos los outliers
Q <- quantile(ab$ytotcor, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(ab$ytotcor)
eliminated <- subset(ab, ab$ytotcor > (Q[1] - 1.5*iqr) & ab$ytotcor < (Q[2]+1.5*iqr))
eliminated <- data.frame(lapply(eliminated, as.character), stringsAsFactors=FALSE)
# despleguemos los primeros 100 registros en pantalla del subset creado:
eliminated_100 <- eliminated[c(1:100),]
# eliminated_100 %>%  kbl() %>%
# kable_material(c("striped", "hover"), font_size = 12)%>%
#    scroll_box(width = "100%", height = "500px")
b <-  as.numeric(eliminated$ytotcor)
a <- eliminated$comuna
c <- eliminated$categorias_etnicas
d <- eliminated$cat_alfa
e <- eliminated$sexo
# Calculamos los promedios de ingreso grupales, la desviación estandar del rango y el coeficiente de Gini:
promedios_grupales <-aggregate(b, by=list(a,c,d,e), FUN = mean , na.rm=TRUE )
promedios_grupales_sd <-aggregate(b, by=list(a,c,d,e), FUN = sd , na.rm=TRUE )
promedios_grupales_gini <-aggregate(b, by=list(a,c,d,e), FUN = gini  )
# Asignamos nuevas columnas a la tabla base con medias y sd:
promedios_grupales$sd <- promedios_grupales_sd$x
promedios_grupales$gini <- promedios_grupales_gini$x
# Eliminamos los valores que no tengan desviacion standard, pues implican registros unicos.
promedios_grupales <-promedios_grupales[!(is.na(promedios_grupales$sd)),]
promedios_grupales_100 <- promedios_grupales[c(1:100),]
# promedios_grupales_100 %>%  kbl() %>% kable_material(c("striped", "hover"), font_size = 12)%>%
#    scroll_box(width = "100%", height = "500px")
#Asignamos nombres con sentido a las cabeceras:
names(promedios_grupales)[1] <- "comuna"
names(promedios_grupales)[2] <- "Etnia"
names(promedios_grupales)[3] <- "Alfabetismo"
names(promedios_grupales)[4] <- "sexo"
names(promedios_grupales)[5] <- "promedio"
names(promedios_grupales)[6] <- "sd"
names(promedios_grupales)[7] <- "gini"
promedios_grupales$año <- "2015"
codigos_comunales <- readRDS(file = "codigos_comunales_2011-2017.rds")
names(codigos_comunales)[1] <- "código"
names(codigos_comunales)[2] <- "comuna"
df_2015 = merge( x = promedios_grupales, y = codigos_comunales, by = "comuna", all.x = TRUE)
unicos <- df_2015[,c(1,2,3,4)]
unicos
dataset_2017 <- readRDS(file = "casen_2017_c.rds")
ab <- dataset_2017
alfabetismo <- read_xlsx("alfabetismo_unicos.xlsx")
categorias <- read_xlsx("categorias_etnia.xlsx")
alfabetismo
names(alfabetismo)
names(categorias)
names(alfabetismo)
dataset_2017_a = merge( x = ab, y = alfabetismo, by = "e1", all.x = TRUE)
dataset_2017_b = merge( x = dataset_2017_a, y = categorias, by = "r3", all.x = TRUE)
dataset_2017_b = merge( x = dataset_2017_a, y = categorias, by = "r3", all.x = TRUE)
dataset_2017 <- readRDS(file = "casen_2017_c.rds")
ab <- dataset_2017
alfabetismo <- read_xlsx("alfabetismo_unicos.xlsx")
categorias <- read_xlsx("categorias_etnia.xlsx")
dataset_2017_a = merge( x = ab, y = alfabetismo, by = "e1", all.x = TRUE)
dataset_2017_b = merge( x = dataset_2017_a, y = categorias, by = "r3", all.x = TRUE)
ab <- dataset_2017_b
# Eliminamos del dataframe los registros que no posean valores en la columna del ingreso total:
ab <- ab[!is.na(ab$ytotcor),]
# Excluimos los outliers
Q <- quantile(ab$ytotcor, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(ab$ytotcor)
eliminated <- subset(ab, ab$ytotcor > (Q[1] - 1.5*iqr) & ab$ytotcor < (Q[2]+1.5*iqr))
eliminated <- data.frame(lapply(eliminated, as.character), stringsAsFactors=FALSE)
# despleguemos los primeros 100 registros en pantalla del subset creado:
eliminated_100 <- eliminated[c(1:100),]
# eliminated_100 %>%  kbl() %>%
# kable_material(c("striped", "hover"), font_size = 12)%>%
#    scroll_box(width = "100%", height = "500px")
b <-  as.numeric(eliminated$ytotcor)
a <- eliminated$comuna
c <- eliminated$categorias_etnicas
d <- eliminated$cat_alfa
e <- eliminated$sexo
# Calculamos los promedios de ingreso grupales, la desviación estandar del rango y el coeficiente de Gini:
promedios_grupales <-aggregate(b, by=list(a,c,d,e), FUN = mean , na.rm=TRUE )
promedios_grupales_sd <-aggregate(b, by=list(a,c,d,e), FUN = sd , na.rm=TRUE )
promedios_grupales_gini <-aggregate(b, by=list(a,c,d,e), FUN = gini  )
# Asignamos nuevas columnas a la tabla base con medias y sd:
promedios_grupales$sd <- promedios_grupales_sd$x
promedios_grupales$gini <- promedios_grupales_gini$x
# Eliminamos los valores que no tengan desviacion standard, pues implican registros unicos.
promedios_grupales <-promedios_grupales[!(is.na(promedios_grupales$sd)),]
# promedios_grupales %>%  kbl() %>% kable_material(c("striped", "hover"), font_size = 12)%>%
#    scroll_box(width = "100%", height = "500px")
#Asignamos nombres con sentido a las cabeceras:
names(promedios_grupales)[1] <- "comuna"
names(promedios_grupales)[2] <- "Etnia"
names(promedios_grupales)[3] <- "Alfabetismo"
names(promedios_grupales)[4] <- "sexo"
names(promedios_grupales)[5] <- "promedio"
names(promedios_grupales)[6] <- "sd"
names(promedios_grupales)[7] <- "gini"
promedios_grupales$año <- "2017"
codigos_comunales <- readRDS(file = "codigos_comunales_2011-2017.rds")
names(codigos_comunales)[1] <- "código"
names(codigos_comunales)[2] <- "comuna"
df_2017 = merge( x = promedios_grupales, y = codigos_comunales, by = "comuna", all.x = TRUE)
df_2017
dataset_2006 <- readRDS(file = "casen_2006_c.rds")
ab <- dataset_2006
alfabetismo
library(RPostgreSQL)
library(devtools)
library(remotes)
library(DBI)
library(tidyverse)
library(kableExtra)
library(reldist)
library("readxl")
library("writexl")
dataset_2006 <- readRDS(file = "casen_2006_c.rds")
ab <- dataset_2006
alfabetismo <- read_xlsx("alfabetismo_unicos.xlsx")
categorias <- read_xlsx("categorias_etnia.xlsx")
alfabetismo
categorias
kbl(alfabetismo) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
kable_paper() %>%
scroll_box(width = "150%", height = "500px")
library(RPostgreSQL)
library(devtools)
library(remotes)
library(DBI)
library(tidyverse)
library(kableExtra)
library(reldist)
library("readxl")
library("writexl")
library("kableExtra")
kbl(alfabetismo) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
kable_paper() %>%
scroll_box(width = "150%", height = "500px")
library(RPostgreSQL)
library(devtools)
library(remotes)
library(DBI)
library(tidyverse)
library(kableExtra)
library(reldist)
library("readxl")
library("writexl")
library(kableExtra)
alfabetismo <- read_xlsx("alfabetismo_unicos.xlsx")
categorias <- read_xlsx("categorias_etnia.xlsx")
kbl(alfabetismo) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
kable_paper() %>%
scroll_box(width = "150%", height = "500px")
